---
export interface Props {
  prevPage?: {
    title: string;
    href: string;
  };
  nextPage?: {
    title: string;
    href: string;
  };
  class?: string;
}

const { prevPage, nextPage, class: className = "" } = Astro.props;
---

{(prevPage || nextPage) && (
  <nav class={`pager flex items-center justify-between border-t pt-8 mt-12 ${className}`} aria-label="Page navigation">
    <div class="flex-1">
      {prevPage && (
        <a 
          href={prevPage.href}
          class="group flex items-center space-x-3 text-sm font-medium text-muted-foreground hover:text-foreground transition-colors"
          rel="prev"
        >
          <div class="flex items-center justify-center w-8 h-8 rounded-full border group-hover:border-primary/50 transition-colors">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </div>
          <div>
            <div class="text-xs uppercase tracking-wide text-muted-foreground/70">Previous</div>
            <div class="font-display font-medium text-foreground group-hover:text-primary transition-colors">
              {prevPage.title}
            </div>
          </div>
        </a>
      )}
    </div>
    
    <div class="flex-1 flex justify-end">
      {nextPage && (
        <a 
          href={nextPage.href}
          class="group flex items-center space-x-3 text-sm font-medium text-muted-foreground hover:text-foreground transition-colors text-right"
          rel="next"
        >
          <div>
            <div class="text-xs uppercase tracking-wide text-muted-foreground/70">Next</div>
            <div class="font-display font-medium text-foreground group-hover:text-primary transition-colors">
              {nextPage.title}
            </div>
          </div>
          <div class="flex items-center justify-center w-8 h-8 rounded-full border group-hover:border-primary/50 transition-colors">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </div>
        </a>
      )}
    </div>
  </nav>
)}

<style>
  .pager {
    /* Ensure proper spacing and alignment */
  }
  
  .pager a {
    /* Improve click target size */
    min-height: 44px;
    display: flex;
    align-items: center;
  }
  
  /* Hover effects */
  .pager a:hover .w-8 {
    transform: translateX(2px);
  }
  
  .pager a[rel="prev"]:hover .w-8 {
    transform: translateX(-2px);
  }
  
  /* Focus styles for accessibility */
  .pager a:focus {
    outline: 2px solid rgb(59 130 246); /* blue-500 */
    outline-offset: 2px;
    border-radius: 0.375rem;
  }
  
  /* Responsive design */
  @media (max-width: 640px) {
    .pager {
      flex-direction: column;
      gap: 1rem;
    }
    
    .pager > div {
      flex: none;
      width: 100%;
    }
    
    .pager .flex.justify-end {
      justify-content: flex-start;
    }
    
    .pager a {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid rgb(229 231 235); /* gray-200 */
      border-radius: 0.5rem;
      background-color: rgb(249 250 251); /* gray-50 */
    }
    
    .dark .pager a {
      border-color: rgb(55 65 81); /* gray-700 */
      background-color: rgb(17 24 39); /* gray-900 */
    }
    
    .pager a:hover {
      background-color: rgb(243 244 246); /* gray-100 */
    }
    
    .dark .pager a:hover {
      background-color: rgb(31 41 55); /* gray-800 */
    }
  }
  
  /* Print styles */
  @media print {
    .pager {
      display: none;
    }
  }
</style>
